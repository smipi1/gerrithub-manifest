# Standard configuration
stdin=serial
stdout=serial
stderr=serial
bootdelay=2
baudrate=115200
ethaddr=0x00:0xaa:0xbb:0xcc:0xdd:0xee
# Factory IP config environment
ipaddr=192.168.1.1
serverip=192.168.1.10
# Factory programming helpers
board=bsb002
flash_uboot=tftp 0x80060000 ${board}/${board}_uboot.bin&&erase 0x9f000000 +$filesize&&cp.b $fileaddr 0x9f000000 $filesize
flash_uboot_env=tftp 0x80060000 ${board}/${board}_uboot_environment.bin&&erase 0x9f040000 +$filesize&&cp.b $fileaddr 0x9f040000 $filesize
flash_art=tftp 0x80060000 ${board}/${board}_art.bin&&erase 0x9f070000 +$filesize&&cp.b $fileaddr 0x9f070000 $filesize
flash_kernel_0=tftp 0x80060000 ${board}/kernel.bin&&nand erase 0x0 0x400000&&nand write $fileaddr 0x0 $filesize
flash_root_0=tftp 0x80060000 ${board}/root.bin&&nand erase 0x400000 0x2800000&&nand write $fileaddr 0x400000 $filesize
flash_kernel_1=tftp 0x80060000 ${board}/kernel.bin&&nand erase 0x2C00000 0x400000&&nand write $fileaddr 0x2C00000 $filesize
flash_root_1=tftp 0x80060000 ${board}/root.bin&&nand erase 0x3000000 0x2800000&&nand write $fileaddr 0x3000000 $filesize
flash_overlay=tftp 0x80060000 ${board}/overlay.bin&&nand erase 0x5800000 0x2800000&&nand write $fileaddr 0x5800000 $filesize
flash_factory=run flash_uboot&&run flash_uboot_env&&run flash_kernel_0&&run flash_root_0&&run flash_overlay
# Boot configuration - common
std_bootargs=board=BSB002 console=ttyS0,115200 ubi.mtd=overlay rootfs=/dev/mtdblock:rootfs rootfstype=squashfs noinitrd init=/sbin/init
# Boot configuration - slot 0
mtdparts0=spi0.0:256k(u-boot)ro,128k(u-boot-env),64k(reserved),64k(art);spi0.1:4m(kernel-0)ro,40m(root-0),4m(kernel-1),40m(root-1),-(overlay)
kernel_0_start=0x0
boot_from_slot_0=setenv bootargs ubi.mtd=5 ${std_bootargs} mtdparts=${mtdparts0}; nboot 0x81000000 0 ${kernel_0_start}
# Boot configuration - slot 1
mtdparts1=spi0.0:256k(u-boot)ro,128k(u-boot-env),64k(reserved),64k(art);spi0.1:4m(kernel-0),40m(root-0),4m(kernel-1)ro,40m(root-1),-(overlay)
kernel_1_start=0x2C00000
boot_from_slot_1=setenv bootargs ubi.mtd=7 ${std_bootargs} mtdparts=${mtdparts1}; nboot 0x81000000 0 ${kernel_1_start}
# Boot command
bootcmd=if test "${bootslot}" -ne "1";then run boot_from_slot_0;else run boot_from_slot_1;fi
# Selected slot
bootslot=0